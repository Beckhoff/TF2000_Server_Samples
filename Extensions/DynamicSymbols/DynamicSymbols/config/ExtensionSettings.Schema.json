{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "definitions": {
    "serverSymbol": {
      "allOf": [
        { "$ref": "http://json-schema.org/draft-04/schema#" },
        {
          "properties": {
            "function": { "type": "boolean" }
          }
        }
      ]
    }
  },
  "properties": {
    "$schema": {
      "type": "string"
    },
    "guid": {
      "type": "string"
    },
    "version": {
      "type": "string",
      "format": "version",
      "description": "Version of the extension library."
    },
    "configVersion": {
      "type": "string",
      "format": "version",
      "description": "Version of the configuration file."
    },
    "productVersion": {
      "type": "string",
      "format": "version",
      "description": "Version of the TwinCAT HMI with which the extension was created."
    },
    "dotNetTargetFramework": {
      "type": "string",
      "description": "The .NET target framework. (This property is set automatically during the build - do not set it manually.)"
    },
    "dotNetTargetFrameworkVersion": {
      "type": "string",
      "description": "Version of the .NET target framework. (This property is set automatically during the build - do not set it manually.)"
    },
    "dotNetPlatformTarget": {
      "type": "string",
      "enum": [
        "AnyCPU",
        "x86",
        "x64"
      ],
      "default": "AnyCPU",
      "description": ".NET platform target. (This property is set automatically during the build - do not set it manually.)"
    },
    "dotNetConfiguration": {
      "type": "string",
      "description": "Configuration of the .NET server extension. (This property is set automatically during the build - do not set it manually.)"
    },
    "signature": {
      "type": "string",
      "format": "base64"
    },
    "signatureData": {
      "type": "string",
      "format": "base64"
    },
    "signatureTcHmiSrvExt": {
      "type": "string",
      "format": "base64"
    },
    "signatureTcHmiSrvExtNet": {
      "type": "string",
      "format": "base64"
    },
    "fileExtensions": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "fileExtension": {
            "type": "string",
            "description": "Extension of the file."
          },
          "fileDescription": {
            "type": "string",
            "description": "Language variable describing the file extension."
          }
        },
        "additionalProperties": false
      },
      "description": "File extensions are used by script extensions."
    },
    "symbols": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "readValue": {
            "$ref": "#/definitions/serverSymbol",
            "description": "Output parameters of the symbol."
          },
          "writeValue": {
            "$ref": "#/definitions/serverSymbol",
            "description": "Input parameters of the symbol."
          },
          "automap": {
            "type": "boolean",
            "default": true,
            "description": "true to automatically map this symbol."
          },
          "hidden": {
            "type": "boolean",
            "default": true,
            "description": "true to hide this symbol in symbol browser."
          },
          "userGroups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "access": {
            "type": "integer",
            "default": 3,
            "enum": [ 0, 1, 2, 3 ],
            "description": "Default access of the symbol."
          },
          "description": {
            "type": "string",
            "description": "Documentation of the symbol."
          },
          "sample": { "type": "object" }
        },
        "additionalProperties": false
      },
      "description": "List of symbols that the extension supports."
    }
  },
  "required": [ "guid", "version", "configVersion" ]
}